generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  userId         String    @unique
  name           String
  email          String    @unique
  username       String    @unique
  hashedPassword String?
  emailVerified  DateTime?
  image          String?
  coverPhoto     String?

  bio       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isAdmin   Boolean  @default(false)

  tweet Tweet[]

  likedIds String[] @db.ObjectId
  likes    Tweet[]  @relation("Like", fields: [likedIds], references: [id])

  followings Following[]
  followers  Follower[]
}

model Follower {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  followerId String @unique

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
}

model Following {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  followingId String @unique

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
}

model Tweet {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  caption String
  media   String[]
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String   @db.ObjectId

  retweets Tweet[] @relation("Retweets")
  tweet    Tweet?  @relation("Retweets", fields: [tweetId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tweetId  String? @db.ObjectId

  isRetweet Boolean @default(false)
  isReply   Boolean @default(false)
  isQuote   Boolean @default(false)

  likedUserIds String[] @db.ObjectId
  likes        User[]   @relation("Like", fields: [likedUserIds], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationRequest {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
